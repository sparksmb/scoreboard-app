- if @game && @scoreboard
  .live-scoreboard#live-scoreboard
    - if @game.visitor_team.logo.attached?
      = image_tag @game.visitor_team.logo, alt: @game.visitor_team.name, class: "team-logo"
    - else
      .team-logo{style: "background: ##{@game.visitor_team.primary_color || 'cccccc'}"}
    - if @scoreboard.name_visible?
      .team-name#visitor-team-name= @game.visitor_team.name

    .score-column
      .score#visitor-score= @scoreboard.visitor_score
      .timeouts#visitor-timeouts
        = image_tag @scoreboard.timeout_image_path(@scoreboard.visitor_timeouts_remaining), width: "60px", height: "16px", alt: "Timeouts"

    .game-info
      .quarter#quarter= @scoreboard.quarter
      - if @scoreboard.time_remaining_visible?
        .time#time-remaining= @scoreboard.time_remaining || "00:00"

    .score-column
      .score#home-score= @scoreboard.home_score
      .timeouts#home-timeouts
        = image_tag @scoreboard.timeout_image_path(@scoreboard.home_timeouts_remaining), width: "60px", height: "16px", alt: "Timeouts"

    - if @scoreboard.name_visible?
      .team-name#home-team-name= @game.home_team.name
    - if @game.home_team.logo.attached?
      = image_tag @game.home_team.logo, alt: @game.home_team.name, class: "team-logo"
    - else
      .team-logo{style: "background: ##{@game.home_team.primary_color || 'cccccc'}"}

- else
  .no-game No upcoming games scheduled

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    if (typeof App.cable !== 'undefined') {
      App.scoreboardSubscription = App.cable.subscriptions.create(
        {
          channel: 'ScoreboardChannel',
          organization_id: #{@organization.id}
        },
        {
          received: function(data) {
            console.log('Received scoreboard update:', data);

            if (data.scoreboard) {
              var scoreboard = data.scoreboard;
              var game = scoreboard.game;

              // Update scores
              var visitorScoreEl = document.getElementById('visitor-score');
              var homeScoreEl = document.getElementById('home-score');
              if (visitorScoreEl) visitorScoreEl.textContent = scoreboard.visitor_score;
              if (homeScoreEl) homeScoreEl.textContent = scoreboard.home_score;

              // Update timeouts with static SVG files
              var visitorTimeoutsEl = document.getElementById('visitor-timeouts');
              var homeTimeoutsEl = document.getElementById('home-timeouts');
              if (visitorTimeoutsEl && scoreboard.visitor_timeouts_remaining !== undefined) {
                console.log('Updating visitor timeouts:', scoreboard.visitor_timeouts_remaining);
                var visitorImagePath = '/images/timeouts_' + scoreboard.visitor_timeouts_remaining + '.svg';
                visitorTimeoutsEl.innerHTML = '<img src="' + visitorImagePath + '" width="60px" height="16px" alt="Timeouts">';
              }
              if (homeTimeoutsEl && scoreboard.home_timeouts_remaining !== undefined) {
                console.log('Updating home timeouts:', scoreboard.home_timeouts_remaining);
                var homeImagePath = '/images/timeouts_' + scoreboard.home_timeouts_remaining + '.svg';
                homeTimeoutsEl.innerHTML = '<img src="' + homeImagePath + '" width="60px" height="16px" alt="Timeouts">';
              }

              // Update quarter
              var quarterEl = document.getElementById('quarter');
              if (quarterEl) {
                // Quarter is now a string value (PRE, Q1, Q2, HALF, Q3, Q4, OT, FINAL)
                quarterEl.textContent = scoreboard.quarter || 'PRE';
              }

              // Update time visibility and content
              var timeEl = document.getElementById('time-remaining');
              if (scoreboard.time_remaining_visible) {
                if (!timeEl) {
                  // Create time element if it doesn't exist
                  timeEl = document.createElement('div');
                  timeEl.id = 'time-remaining';
                  timeEl.className = 'time';
                  document.querySelector('.game-info').appendChild(timeEl);
                }
                timeEl.textContent = scoreboard.time_remaining || '00:00';
                timeEl.style.display = 'block';
              } else {
                if (timeEl) {
                  timeEl.style.display = 'none';
                }
              }

              // Update team name visibility and content
              var visitorNameEl = document.getElementById('visitor-team-name');
              var homeNameEl = document.getElementById('home-team-name');
              if (scoreboard.name_visible) {
                if (!visitorNameEl && game.visitor_team) {
                  // Create visitor team name element if it doesn't exist
                  visitorNameEl = document.createElement('div');
                  visitorNameEl.id = 'visitor-team-name';
                  visitorNameEl.className = 'team-name';
                  // Insert after visitor team logo
                  var visitorLogo = document.querySelector('.live-scoreboard img:first-of-type, .live-scoreboard .team-logo:first-of-type');
                  if (visitorLogo) {
                    visitorLogo.parentNode.insertBefore(visitorNameEl, visitorLogo.nextSibling);
                  }
                }
                if (!homeNameEl && game.home_team) {
                  // Create home team name element if it doesn't exist  
                  homeNameEl = document.createElement('div');
                  homeNameEl.id = 'home-team-name';
                  homeNameEl.className = 'team-name';
                  // Insert after home team logo (at the end)
                  document.querySelector('.live-scoreboard').appendChild(homeNameEl);
                }
                if (visitorNameEl && game.visitor_team) {
                  visitorNameEl.textContent = game.visitor_team.name;
                  visitorNameEl.style.display = 'block';
                }
                if (homeNameEl && game.home_team) {
                  homeNameEl.textContent = game.home_team.name;
                  homeNameEl.style.display = 'block';
                }
              } else {
                if (visitorNameEl) {
                  visitorNameEl.style.display = 'none';
                }
                if (homeNameEl) {
                  homeNameEl.style.display = 'none';
                }
              }
            }
          },

          connected: function() {
            console.log('Connected to scoreboard channel for organization #{@organization.id}');
          },

          disconnected: function() {
            console.log('Disconnected from scoreboard channel');
          }
        }
      );
    } else {
      console.error('ActionCable not available');
    }
  });
